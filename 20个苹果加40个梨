在Java程序中，每个数据对象都必须有确定的数据类型。这是为什么呢？

我们知道，计算机内存中的数据都是0|1串，例如下面这16位0|1组成的串。那么这个0|1串到底代表什么意思呢？

01000001 01000010

同样的这一段0|1串，如果是8位小整数，则是两个整数65和66；如果是字符，则是'A'和'B'；如果是16位整数，则是16706。同一串数据，赋予不同的类型就有不同的解释，就代表了不同的含义，所以数据对象都必须有确定的数据类型。

Java语言是一个强类型的语言,在声明任何变量时,必须将该变量定义为一种数据类型。基本的Java数据类型如下所示：

类型名	存储大小	类别
byte	8位	整数型
short	16位	整数型
int	32位	整数型
long	64位	整数型
float	32位	浮点型
double	64位	浮点型
char	16位	字符型
boolean	8/32位	布尔型
变量的定义规范

在Java程序中，变量作为一种标识符，应该符合以下规范：

标识符可以由字母，数字，下划线，美元（$）组成，但是不能包含@，%，空格等其他的特殊符号，不能以数字开头，例如123name就是不合法的；

标识符不能是Java关键字和保留字（Java预留的关键字，或者以后升级版本中有可能作为关键字），但可以包含关键字和保留字，例如：不可以使用final作为标识符，但是Myfinal可以；

标识符是严格区分大小写的，所以一定要分清MyVar和myvar是两个不同的标识符；

标识符的命名最好能反应出其作用，做到见名知意。

变量声明与赋值

变量是Java程序中用来存储数据的单元。当我们创建变量的时候，需要在内存中申请相应的空间。通过定义不同类型的变量，可以在内存中储存整数、小数或者字符等数据。

在Java程序中可以采用以下几种方式定义变量：

先声明后赋值：

//声明：变量数据类型  变量名
int var;
//赋值：变量名 = 值
var = 20;
一步完成声明、赋值:

//变量数据类型  变量名 = 值
int var = 20;
对于多个变量的初始化，同样可以一步完成

int var1 = 20, var2 = 30;
编程要求

本关的编程任务是补全右侧函数中变量初始化相关的代码，具体要求：

将已声明的变量n_apples赋值为：20；
声明一个名为n_pears的整数型变量并赋值为：40；
定义三个字符型变量chr1、chr2、chr3分别赋值为：'E'、'a'、't' 。
本关设计的代码框架如下：

public static void main(String[] args){
  int n_apples;
  // 请在此添加代码，完成上述三个要求
  /********** Begin *********/
  /********** End *********/
  int total = n_apples + n_pears;
  // 输出结果
  System.out.print(chr1);
  System.out.print(chr2);
  System.out.print(chr3);
  System.out.print(": " + total);
}
测试说明

本关将通过输出与预期比对的方式，检查你的程序是否正确。具体来说，实训平台会自动运行补全后的代码，然后检查字符型变量与数值型变量的声明与赋值操作是否正确。

测试输入：
无
测试输出：
Eat: 60


package step2;

public class initVariable{
	
	public static void main(String[] args){
        
		int n_apples;
		
        // 请在此添加代码，完成上述三个要求
		/********** Begin *********/
		n_apples = 20;
		int n_pears = 40;
		        char chr1 = 'E',chr2 = 'a',chr3 = 't';
        
        
		/********** End *********/
        
        int total = n_apples + n_pears;
        
        // 输出结果
		System.out.print(chr1);
		System.out.print(chr2);
		System.out.print(chr3);
		System.out.print(": " + total);
	}	
}
